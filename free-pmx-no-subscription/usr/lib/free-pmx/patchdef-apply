#!/bin/bash

# SPDX-License-Identifier: AGPL-3.0-only

source "/usr/lib/free-pmx/no-subscription-util" 2> /dev/null \
|| { echo "Internal error, aborting." >&2; exit 1; }

declare -i status=0

[[ -n $1 ]] && declare -r patchdef=$1 || exit 1
declare -r bak_ext=$2

declare -A pd
source_kv "$patchdef" pd DISPLAY TARGET PACKAGE SINCE \
&& check_kv_allset pd DISPLAY TARGET PACKAGE SINCE \
|| { echo "! Corrupt patch definition: $patchdef" >&2; exit $(( status | 1 )); }

[[ -f ${pd[TARGET]} ]] \
|| { echo "! File to patch not present for: ${pd[DISPLAY]}" >&2; exit $(( status | 2 )); }

declare pd_version
pd_version=$(deb_last_le_version "${pd[PACKAGE]}" "${pd[SINCE]}") \
|| { echo "! Cannot determine appropriate patch version: $patchdef" >&2; exit $(( status | 4 )); }

declare pd_partial="${patchdef%*.patchdef}.$pd_version"

declare -A pd_rawblock
slurp "$pd_partial".orig 'pd_rawblock[ORIG]' \
&& slurp "$pd_partial".repl 'pd_rawblock[REPL]' \
|| { echo "! Error loading patch partials: $pd_partial.{orig,repl}" >&2; exit $(( status | 4 )); }

if [[ -n $bak_ext ]]; then
    cp "${pd[TARGET]}"{,."$bak_ext"} 2> /dev/null \
    || echo "! Unable to make a '.$bak_ext' copy: ${pd[TARGET]}" >&2
fi

declare tfile checksum_prior checksum_after

checksum_prior=$(checksum "${pd[TARGET]}")

{
tfile=$(mktemp /tmp/free_pmx_patched_XXXXXX) \
&& chmod 644 "$tfile" \
&& subst_rawblock pd_rawblock < "${pd[TARGET]}" > "$tfile" \
&& mv -f "$tfile" "${pd[TARGET]}"; \
} 2> /dev/null \
|| { echo "! Error during patch application: ${pd[DISPLAY]}" >&2; exit $(( status | 2 )); }

checksum_after=$(checksum "${pd[TARGET]}")

if [[ -z $checksum_prior ]] || [[ -z $checksum_after ]]; then
    echo "? Unknown result: ${pd[DISPLAY]}"
    status=$(( status | 4 ))
elif [[ $checksum_prior == "$checksum_after" ]]; then
    echo "- NO effect: ${pd[DISPLAY]}"
    status=$(( status | 8 ))
else
    echo "+ OK: ${pd[DISPLAY]}"
fi

exit $status
