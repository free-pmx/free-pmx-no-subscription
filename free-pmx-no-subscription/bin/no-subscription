#!/bin/bash

# SPDX-FileCopyrightText: Copyright 2025 free-pmx
# SPDX-License-Identifier: AGPL-3.0-only

declare -i status=0

source "/usr/lib/free-pmx/no-subscription-common" \
    && init_out \
    || exit 255

print OUT
print OUT "free-pmx: NO-SUBSCRIPTION - 'No Subscription' Repositories Setup"
trap 'print OUT' EXIT

init_run "FREE_PMX_NO_SUBSCRIPTION" "$@"

declare_ns_globals || {
    print ERR "Cannot gather necessary system information, aborting."
    exit 1
}

declare -A todo_id_flags
declare id
for id in "${APTSRC_ID_LIST[@]}"; do todo_id_flags[$id]=0; done

if [[ -n $O_TARGET ]]; then
    ((${#ARGS[@]} == 0)) || {
        print ERR "Arguments not allowed when used with '-t' option."
        exit 1
    }

    declare id="${APTSRC_TARGET_TO_ID[$O_TARGET]}"
    if [[ -n $id ]]; then
        print OUT "Explicit target recognised."
        todo_id_flags[$id]=1
    else
        print ERR "No defined repositories for this target."
        ((status |= 1))
    fi
elif ((${#ARGS[@]} > 0)); then
    declare arg
    for arg in "${ARGS[@]}"; do
        [[ -v APTSRC_ID_TO_TARGET[$arg] ]] || {
            print ERR "Invalid argument: $arg"
            exit 1
        }

        todo_id_flags[$arg]=1
    done
else
    echo -n "Detecting default sources ..."
    declare id
    for id in "${APTSRC_ID_LIST[@]}"; do
        [[ -f ${APTSRC_ID_TO_TARGET[$id]} ]] && todo_id_flags[$id]=1 && echo -n " $id"
    done
    echo
fi

declare -i todo_count=0 done_count=0
declare id
for id in "${APTSRC_ID_LIST[@]}"; do ((todo_count += todo_id_flags[$id])); done

if ((todo_count > 0)); then
    ((todo_id_flags[ceph])) && [[ -z $FREE_PMX_CEPH ]] && {
        print ERR "Ceph codename not configured, skipping ..."
        todo_id_flags[ceph]=0
    }

    declare id
    for id in "${APTSRC_ID_LIST[@]}"; do
        ((todo_id_flags[$id])) \
            && print OUT "Setting up for $id ..." \
            && run_aptsrc_replace "${APTSRC_ID_TO_TARGET[$id]}" "${APTSRC_ID_TO_TEMPL[$id]}" \
            && ((done_count++))
    done
    ((done_count == todo_count)) || ((status |= 1))

    print OUT "Completed total $done_count of $todo_count."

    print OUT

    print OUT "Checking for Proxmox release key ..."

    if [[ $FREE_PMX_APTKEY == "$FREE_PMX_APTKEY_LOCAL" ]]; then
        run_aptkey_check "$FREE_PMX_APTKEY_LOCAL" "$FREE_PMX_APTKEY_ORIGIN" || {
            print ERR "Failed Proxmox release key check."
            ((status |= 1))
        }
    else
        print OUT "Skipped - custom key specified: $FREE_PMX_APTKEY"
    fi
else
    print OUT "Nothing to be set up."
fi

! ((O_AUTORUN)) && ((done_count > 0)) \
    && print ERR $'\e' << EOF

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NOTICE: Do not forget to perform UPDATE and UPGRADE, e.g.:
    apt update
    apt full-upgrade
EOF

! ((O_AUTORUN)) \
    && print ERR $'\e' << EOF

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Visit $NS_WEB
for more details, to check the latest version or to report an issue.
EOF

exit $((status))
